{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar particleJS = function () {\n  function particleJS(config) {\n    _classCallCheck(this, particleJS);\n\n    this.ele = document.getElementById(config.element); // canvas id\n\n    this.src = config.imagePath; // image path\n\n    this.cropStartPointX = config.cropStartPointX; // crop locate point X\n\n    this.cropStartPointY = config.cropStartPointY; // crop locate point Y\n\n    this.cropX = config.cropX; // crop width\n\n    this.cropY = config.cropY; // crop height\n\n    this.startingPointX = config.startingPointX; // coordinate X for a starting point\n\n    this.startingPointY = config.startingPointY; // coordinate Y for a starting point\n\n    this.destinationX = config.destinationX; // coordinate X for destination locate point\n\n    this.destinationY = config.destinationY; // coordinate Y for destination locate point\n\n    this.duration = config.duration; // 60ms unit time\n\n    this.pointOffsetEnable = config.pointOffsetEnable; // whether enable point offset\n\n    this.pointOffsetLevel = config.pointOffsetLevel; // (Math.random() - 0.5) *\n\n    this.timeOffsetLevel = config.timeOffsetLevel; // (Math.random() - 0.5) *\n\n    this.spacingEnable = config.spacingEnable; // whether enable spacing\n\n    this.spacingLevel = config.spacingLevel; // 1,2,3,4,5,6,7,8,9\n\n    return this;\n  }\n\n  _createClass(particleJS, [{\n    key: 'render',\n    value: function render() {\n      var ctx = null;\n\n      if (this.ele.getContext) {\n        ctx = this.ele.getContext('2d');\n      }\n\n      var image = new Image();\n      var that = this;\n\n      image.onload = function () {\n        var imgWidth = image.width,\n            imgHeight = image.height;\n        that.ele.height = imgHeight;\n        that.ele.width = imgWidth;\n        ctx.drawImage(image, that.cropStartPointX, that.cropStartPointY, that.cropX, that.cropY, 0, 0, that.cropX, that.cropY);\n        var cur_particle = null,\n            cur_time = 0,\n            particles = [];\n        var data = ctx.getImageData(0, 0, that.cropX, that.cropY);\n        saveParticles();\n\n        function saveParticles() {\n          if (that.spacingEnable) {\n            for (var i = 1; i <= that.cropY; i++) {\n              for (var j = 1; j <= that.cropX; j++) {\n                if (i % that.spacingLevel == 0 && j % that.spacingLevel == 0) {\n                  var index = ((i - 1) * that.cropX + j - 1) * 4;\n                  var fillStyle = 'rgba(' + data.data[index] + ', ' + data.data[index + 1] + ', ' + data.data[index + 2] + ', ' + data.data[index + 3] + ')';\n                  var offset = void 0;\n\n                  if (that.pointOffsetEnable) {\n                    offset = (Math.random() - 0.5) * that.pointOffsetLevel;\n                  } else {\n                    offset = 0;\n                  }\n\n                  var timeOffset = (Math.random() - 0.5) * that.timeOffsetLevel;\n                  var particle = {\n                    x: that.destinationX + j + offset,\n                    y: that.destinationY + i + offset,\n                    style: fillStyle,\n                    delay: 0 + timeOffset\n                  };\n                  particles.push(particle);\n                } else {\n                  var pos = ((i - 1) * that.cropX + j - 1) * 4;\n                  data.data[pos] = 0;\n                  data.data[pos + 1] = 0;\n                  data.data[pos + 2] = 0;\n                  data.data[pos + 3] = 0;\n                }\n              }\n            }\n          } else {\n            for (var _i = 1; _i <= that.cropY; _i++) {\n              for (var _j = 1; _j <= that.cropX; _j++) {\n                var _index = ((_i - 1) * that.cropX + _j - 1) * 4;\n\n                var _fillStyle = 'rgba(' + data.data[_index] + ', ' + data.data[_index + 1] + ', ' + data.data[_index + 2] + ', ' + data.data[_index + 3] + ')';\n\n                var _offset = void 0;\n\n                if (that.pointOffsetEnable) {\n                  _offset = (Math.random() - 0.5) * that.pointOffsetLevel;\n                } else {\n                  _offset = 0;\n                }\n\n                var _timeOffset = (Math.random() - 0.5) * that.timeOffsetLevel;\n\n                var _particle = {\n                  x: that.destinationX + _j + _offset,\n                  y: that.destinationY + _i + _offset,\n                  style: _fillStyle,\n                  delay: 0 + _timeOffset\n                };\n                particles.push(_particle);\n              }\n            }\n          }\n        }\n\n        function easeInOutExpo(t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n          return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n        }\n\n        function animate() {\n          ctx.clearRect(0, 0, that.ele.width, that.ele.height);\n\n          for (var i = 0, len = particles.length; i < len; i++) {\n            if (cur_time <= that.duration) {\n              cur_particle = particles[i];\n\n              if (cur_particle.delay > cur_time) {\n                continue;\n              } else {\n                ctx.fillStyle = cur_particle.style;\n                var cur_x = easeInOutExpo(cur_time, that.startingPointX, cur_particle.x - that.startingPointX, that.duration + cur_particle.delay);\n                var cur_y = easeInOutExpo(cur_time, that.startingPointY, cur_particle.y - that.startingPointY, that.duration + cur_particle.delay);\n                ctx.fillRect(cur_x, cur_y, 1, 1);\n              }\n            }\n          }\n\n          if (cur_time > that.duration) {\n            ctx.drawImage(image, that.cropStartPointX, that.cropStartPointY, that.cropX, that.cropY, 0, 0, that.cropX, that.cropY);\n            return;\n          }\n\n          cur_time++;\n          requestAnimationFrame(animate);\n        }\n\n        requestAnimationFrame(animate);\n      };\n\n      image.crossOrigin = 'anonymous';\n      image.src = this.src;\n    }\n  }]);\n\n  return particleJS;\n}();\n\nexports.default = particleJS;","map":{"version":3,"sources":["/home/prachi/Projects/DhuanDhar/node_modules/particle.js/lib/particle.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","particleJS","config","ele","document","getElementById","element","src","imagePath","cropStartPointX","cropStartPointY","cropX","cropY","startingPointX","startingPointY","destinationX","destinationY","duration","pointOffsetEnable","pointOffsetLevel","timeOffsetLevel","spacingEnable","spacingLevel","render","ctx","getContext","image","Image","that","onload","imgWidth","width","imgHeight","height","drawImage","cur_particle","cur_time","particles","data","getImageData","saveParticles","j","index","fillStyle","offset","Math","random","timeOffset","particle","x","y","style","delay","push","pos","_i","_j","_index","_fillStyle","_offset","_timeOffset","_particle","easeInOutExpo","t","b","c","d","pow","animate","clearRect","len","cur_x","cur_y","fillRect","requestAnimationFrame","crossOrigin","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar particleJS = function () {\n  function particleJS(config) {\n    _classCallCheck(this, particleJS);\n\n    this.ele = document.getElementById(config.element); // canvas id\n    this.src = config.imagePath; // image path\n    this.cropStartPointX = config.cropStartPointX; // crop locate point X\n    this.cropStartPointY = config.cropStartPointY; // crop locate point Y\n    this.cropX = config.cropX; // crop width\n    this.cropY = config.cropY; // crop height\n    this.startingPointX = config.startingPointX; // coordinate X for a starting point\n    this.startingPointY = config.startingPointY; // coordinate Y for a starting point\n    this.destinationX = config.destinationX; // coordinate X for destination locate point\n    this.destinationY = config.destinationY; // coordinate Y for destination locate point\n    this.duration = config.duration; // 60ms unit time\n    this.pointOffsetEnable = config.pointOffsetEnable; // whether enable point offset\n    this.pointOffsetLevel = config.pointOffsetLevel; // (Math.random() - 0.5) *\n    this.timeOffsetLevel = config.timeOffsetLevel; // (Math.random() - 0.5) *\n    this.spacingEnable = config.spacingEnable; // whether enable spacing\n    this.spacingLevel = config.spacingLevel; // 1,2,3,4,5,6,7,8,9\n    return this;\n  }\n\n  _createClass(particleJS, [{\n    key: 'render',\n    value: function render() {\n      var ctx = null;\n      if (this.ele.getContext) {\n        ctx = this.ele.getContext('2d');\n      }\n      var image = new Image();\n      var that = this;\n      image.onload = function () {\n        var imgWidth = image.width,\n            imgHeight = image.height;\n        that.ele.height = imgHeight;\n        that.ele.width = imgWidth;\n        ctx.drawImage(image, that.cropStartPointX, that.cropStartPointY, that.cropX, that.cropY, 0, 0, that.cropX, that.cropY);\n        var cur_particle = null,\n            cur_time = 0,\n            particles = [];\n        var data = ctx.getImageData(0, 0, that.cropX, that.cropY);\n        saveParticles();\n\n        function saveParticles() {\n          if (that.spacingEnable) {\n            for (var i = 1; i <= that.cropY; i++) {\n              for (var j = 1; j <= that.cropX; j++) {\n                if (i % that.spacingLevel == 0 && j % that.spacingLevel == 0) {\n                  var index = ((i - 1) * that.cropX + j - 1) * 4;\n                  var fillStyle = 'rgba(' + data.data[index] + ', ' + data.data[index + 1] + ', ' + data.data[index + 2] + ', ' + data.data[index + 3] + ')';\n                  var offset = void 0;\n                  if (that.pointOffsetEnable) {\n                    offset = (Math.random() - 0.5) * that.pointOffsetLevel;\n                  } else {\n                    offset = 0;\n                  }\n                  var timeOffset = (Math.random() - 0.5) * that.timeOffsetLevel;\n                  var particle = {\n                    x: that.destinationX + j + offset,\n                    y: that.destinationY + i + offset,\n                    style: fillStyle,\n                    delay: 0 + timeOffset\n                  };\n                  particles.push(particle);\n                } else {\n                  var pos = ((i - 1) * that.cropX + j - 1) * 4;\n                  data.data[pos] = 0;\n                  data.data[pos + 1] = 0;\n                  data.data[pos + 2] = 0;\n                  data.data[pos + 3] = 0;\n                }\n              }\n            }\n          } else {\n            for (var _i = 1; _i <= that.cropY; _i++) {\n              for (var _j = 1; _j <= that.cropX; _j++) {\n                var _index = ((_i - 1) * that.cropX + _j - 1) * 4;\n                var _fillStyle = 'rgba(' + data.data[_index] + ', ' + data.data[_index + 1] + ', ' + data.data[_index + 2] + ', ' + data.data[_index + 3] + ')';\n                var _offset = void 0;\n                if (that.pointOffsetEnable) {\n                  _offset = (Math.random() - 0.5) * that.pointOffsetLevel;\n                } else {\n                  _offset = 0;\n                }\n                var _timeOffset = (Math.random() - 0.5) * that.timeOffsetLevel;\n                var _particle = {\n                  x: that.destinationX + _j + _offset,\n                  y: that.destinationY + _i + _offset,\n                  style: _fillStyle,\n                  delay: 0 + _timeOffset\n                };\n                particles.push(_particle);\n              }\n            }\n          }\n        }\n\n        function easeInOutExpo(t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n          return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n        }\n\n        function animate() {\n          ctx.clearRect(0, 0, that.ele.width, that.ele.height);\n          for (var i = 0, len = particles.length; i < len; i++) {\n            if (cur_time <= that.duration) {\n              cur_particle = particles[i];\n              if (cur_particle.delay > cur_time) {\n                continue;\n              } else {\n                ctx.fillStyle = cur_particle.style;\n                var cur_x = easeInOutExpo(cur_time, that.startingPointX, cur_particle.x - that.startingPointX, that.duration + cur_particle.delay);\n                var cur_y = easeInOutExpo(cur_time, that.startingPointY, cur_particle.y - that.startingPointY, that.duration + cur_particle.delay);\n                ctx.fillRect(cur_x, cur_y, 1, 1);\n              }\n            }\n          }\n          if (cur_time > that.duration) {\n            ctx.drawImage(image, that.cropStartPointX, that.cropStartPointY, that.cropX, that.cropY, 0, 0, that.cropX, that.cropY);\n            return;\n          }\n          cur_time++;\n          requestAnimationFrame(animate);\n        }\n        requestAnimationFrame(animate);\n      };\n      image.crossOrigin = 'anonymous';\n      image.src = this.src;\n    }\n  }]);\n\n  return particleJS;\n}();\n\nexports.default = particleJS;\n"]},"metadata":{},"sourceType":"script"}